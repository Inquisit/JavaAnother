/*if (bSD.bSD[bSD.iCurPos] != 0)
		{
			bSD.iCurPos += DATA_INTERVALS.iSize;
			iBlockSize = Byte.toUnsignedInt(bSD.bSD[bSD.iCurPos]) + Byte.toUnsignedInt(bSD.bSD[bSD.iCurPos + 1]) * 256;
			bSD.iCurPos += 4;
			if (iBlockSize != 0)
			{
				this.isMF = true;
				this.sMainFormula = sSD.substring(bSD.iCurPos, bSD.iCurPos + iBlockSize);
				bSD.iCurPos += iBlockSize;
			}
		}
		else
		{
			bSD.iCurPos += DATA_INTERVALS.MAIN_FORMULA.getPos();
		}*/
		/*if (bSD.bSD[bSD.iCurPos] != 0)
		{
			bSD.iCurPos += DATA_INTERVALS.iSize;
			iBlockSize = Byte.toUnsignedInt(bSD.bSD[bSD.iCurPos]) + Byte.toUnsignedInt(bSD.bSD[bSD.iCurPos + 1]) * 256;
			bSD.iCurPos += 4;
			if (iBlockSize != 0)
			{
				this.isAF = true;
				this.sAddFormula = sSD.substring(bSD.iCurPos, bSD.iCurPos + iBlockSize);
				bSD.iCurPos += iBlockSize;
			}
		}
		else
		{
			bSD.iCurPos += DATA_INTERVALS.ADD_FORMULA.getPos();
		}*/
		/*if (bSD.bSD[bSD.iCurPos] != 0)
		{
			bSD.iCurPos += DATA_INTERVALS.iSize;
			iBlockSize = Byte.toUnsignedInt(bSD.bSD[bSD.iCurPos]) + Byte.toUnsignedInt(bSD.bSD[bSD.iCurPos + 1]) * 256;
			bSD.iCurPos += 4;
			if (iBlockSize != 0)
			{
				this.isDS = true;
				this.sDisabled = sSD.substring(bSD.iCurPos, bSD.iCurPos + iBlockSize);
				bSD.iCurPos += iBlockSize;
			}
		}
		else
		{
			bSD.iCurPos += DATA_INTERVALS.DISABLED.getPos();
		}*/
		/*if (bSD.bSD[bSD.iCurPos] != 0)
		{
			bSD.iCurPos += DATA_INTERVALS.iSize;
			iBlockSize = Byte.toUnsignedInt(bSD.bSD[bSD.iCurPos]) + Byte.toUnsignedInt(bSD.bSD[bSD.iCurPos + 1]) * 256;
			bSD.iCurPos += 4;
			if (iBlockSize != 0)
			{
				this.isIN = true;
				this.sInvisible = sSD.substring(bSD.iCurPos, bSD.iCurPos + iBlockSize);
				bSD.iCurPos += iBlockSize;
			}
		}
		else
		{
			bSD.iCurPos += DATA_INTERVALS.INVISIBLE.getPos();
		}*/
		/*if (bSD.bSD[bSD.iCurPos] != 0)
		{
			bSD.iCurPos += DATA_INTERVALS.iSize;
			iBlockSize = Byte.toUnsignedInt(bSD.bSD[bSD.iCurPos]) + Byte.toUnsignedInt(bSD.bSD[bSD.iCurPos + 1]) * 256;
			bSD.iCurPos += 4;
			if (iBlockSize != 0)
			{
				this.isSF = true;
				this.sSelFormula = sSD.substring(bSD.iCurPos, bSD.iCurPos + iBlockSize);
				bSD.iCurPos += iBlockSize;
			}
		}
		else
		{
			bSD.iCurPos += DATA_INTERVALS.SEL_FORMULA.getPos();
		}*/

//	public static final String THEME = "Windows Classic";


//			UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
//			UIManager.setLookAndFeel("com.sun.java.swing.plaf.motif.MotifLookAndFeel");
//			WebLookAndFeel.install ();
			
//			for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) 
			{
//				System.out.println(info.getName());
//		        if (GLOBAL_CONSTANTS.THEME.equals(info.getName())) 
		        {
//		            UIManager.setLookAndFeel(info.getClassName());
//		            break;
		        }
		    }
			
/**************************************************************************************************************/
/*
if (sdData.isMF) 
				{
					System.out.println(sdData.sMainFormula);
				}
				else
				{
					System.out.println("NO main formula");
				}
				if (sdData.isAF) 
				{
					System.out.println(sdData.sAddFormula);
				}
				else
				{
					System.out.println("NO add formula");
				}
				if (sdData.bCalcMethod)
				{
					System.out.println("Calc true");
				}
				else
				{
					System.out.println("Calc false");
				}
				if (sdData.bRecalc)
				{
					System.out.println("ReCalc true");
				}
				else
				{
					System.out.println("ReCalc false");
				}
				if (sdData.isDS) 
				{
					System.out.println(sdData.sDisabled);
				}
				else
				{
					System.out.println("NO disabled");
				}
				if (sdData.isIN) 
				{
					System.out.println(sdData.sInvisible);
				}
				else
				{
					System.out.println("NO invis");
				}
				if (sdData.isSF) 
				{
					System.out.println(sdData.sSelFormula);
				}
				else
				{
					System.out.println("NO SelF");
				}
				if (sdData.bService)
				{
					System.out.println("Service true");
				}
				else
				{
					System.out.println("Service false");
				}
				*/